(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

require("./modules/card.js");

},{"./modules/card.js":2}],2:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.renderCard = void 0;
var _mock = require("./mock.js");
var _objects = require("./objects.js");
var _counter = require("./counter.js");
var cardTemplate = document.querySelector('#card').content.querySelector('.card');
var getWarningAboutAmount = function getWarningAboutAmount(card, amount) {
  if (amount <= _objects.LOW_PRODUCT_AMOUNT) {
    card.querySelector('.card__amount-warning').textContent = "\u041E\u0441\u0442\u0430\u043B\u043E\u0441\u044C ".concat(amount, " \u0448\u0442.");
  }
};
var getDeleteCard = function getDeleteCard() {};
var getCardProperties = function getCardProperties(card, properties) {
  var propertisContainer = card.querySelector('.card__properties');
  properties.forEach(function (element) {
    var newPropertis = document.createElement('span');
    newPropertis.classList.add('card__property');
    newPropertis.textContent = element;
    propertisContainer.append(newPropertis);
  });
};
var getCard = function getCard(element) {
  var cardElement = cardTemplate.cloneNode('true');
  cardElement.querySelector('.card__img').src = "img/cards/".concat(element.id, "-product.jpg");
  cardElement.querySelector('.card__title').textContent = element.title;
  cardElement.querySelector('.card__stock').textContent = element.stock;
  getCardProperties(cardElement, element.properties);
  cardElement.querySelector('.card__manufacturer').textContent = element.manufacturer;
  cardElement.querySelector('.counter__input').value = element.amount;
  getWarningAboutAmount(cardElement, element.amountLeft);
  cardElement.querySelector('.card__actual-price').textContent = element.amount * element.actualPrice;
  cardElement.querySelector('.card__past-price').textContent = element.amount * element.oldPrice;
  return cardElement;
};
var renderCard = function renderCard(card, place) {
  var newCard = getCard(card);
  (0, _counter.addCounter)(newCard);
  place.append(newCard);
};
exports.renderCard = renderCard;
renderCard(_mock.CARD, document.querySelector('.product__card-container'));

},{"./counter.js":3,"./mock.js":4,"./objects.js":5}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.removeCounter = exports.addCounter = void 0;
var _mock = require("./mock.js");
var startsCounting = function startsCounting(event) {
  var target = event.target;
  var indicator = target.closest('.counter').querySelector('.counter__input');
  var add = target.closest('.counter').querySelector('.counter__button--plus');
  var minus = target.closest('.counter').querySelector('.counter__button--minus');
  var value = indicator.value;
  if (target.closest('.counter__button--plus')) {
    value++;
  }
  if (target.closest('.counter__button--minus')) {
    value--;
  }
  if (value <= 0) {
    value = 0;
    minus.classList.add('counter__button--disabled');
  } else {
    minus.classList.remove('counter__button--disabled');
  }
  if (value >= _mock.CARD.amountLeft) {
    value = _mock.CARD.amountLeft;
    add.classList.add('counter__button--disabled');
  } else {
    add.classList.remove('counter__button--disabled');
  }
  _mock.CARD.amount = value;
  indicator.value = value;
};
var addCounter = function addCounter(card) {
  var counter = card.querySelector('[data-counter]');
  counter.addEventListener('click', startsCounting);
};
exports.addCounter = addCounter;
var removeCounter = function removeCounter(card) {
  var counter = card.querySelector('[data-counter]');
  counter.removeEventListener('click', startsCounting);
};
exports.removeCounter = removeCounter;

},{"./mock.js":4}],4:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CARD = void 0;
var CARDS = [];

// id
// title
// [properties]
// stock
// manufacturer
// amount
// price-per-unit
// old-price-per-unit

var CARD = {
  id: 1,
  title: 'Футболка UZcotton мужская',
  properties: ['Цвет: белый', 'Размер: 56'],
  stock: 'Коледино WB',
  manufacturer: 'OOO Вайлдберриз',
  amount: 1,
  actualPrice: 522,
  oldPrice: 1051,
  amountLeft: 2
};
exports.CARD = CARD;

},{}],5:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LOW_PRODUCT_AMOUNT = void 0;
var LOW_PRODUCT_AMOUNT = 5;
exports.LOW_PRODUCT_AMOUNT = LOW_PRODUCT_AMOUNT;

},{}]},{},[1])


//# sourceMappingURL=main.min.js.map
